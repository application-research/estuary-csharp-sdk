/*
 * Estuary API
 *
 * This is the API for the Estuary application.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing PinningApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PinningApiTests
    {
        private PinningApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PinningApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PinningApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' PinningApi
            //Assert.IsInstanceOf(typeof(PinningApi), instance);
        }

        
        /// <summary>
        /// Test PinningPinsGet
        /// </summary>
        [Test]
        public void PinningPinsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.PinningPinsGet();
            
        }
        
        /// <summary>
        /// Test PinningPinsPost
        /// </summary>
        [Test]
        public void PinningPinsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string cid = null;
            //string name = null;
            //var response = instance.PinningPinsPost(cid, name);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test PinningPinsRequestidDelete
        /// </summary>
        [Test]
        public void PinningPinsRequestidDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string requestid = null;
            //var response = instance.PinningPinsRequestidDelete(requestid);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test PinningPinsRequestidGet
        /// </summary>
        [Test]
        public void PinningPinsRequestidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string requestid = null;
            //var response = instance.PinningPinsRequestidGet(requestid);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test PinningPinsRequestidPost
        /// </summary>
        [Test]
        public void PinningPinsRequestidPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string requestid = null;
            //var response = instance.PinningPinsRequestidPost(requestid);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
    }

}
