/*
 * Estuary API
 *
 * This is the API for the Estuary application.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing CollectionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CollectionsApiTests
    {
        private CollectionsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CollectionsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CollectionsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' CollectionsApi
            //Assert.IsInstanceOf(typeof(CollectionsApi), instance);
        }

        
        /// <summary>
        /// Test CollectionsAddContentPost
        /// </summary>
        [Test]
        public void CollectionsAddContentPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MainAddContentToCollectionParams body = null;
            //var response = instance.CollectionsAddContentPost(body);
            //Assert.IsInstanceOf(typeof(Dictionary<string, string>), response, "response is Dictionary<string, string>");
        }
        
        /// <summary>
        /// Test CollectionsContentColuuidGet
        /// </summary>
        [Test]
        public void CollectionsContentColuuidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string coluuid = null;
            //var response = instance.CollectionsContentColuuidGet(coluuid);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test CollectionsCreatePost
        /// </summary>
        [Test]
        public void CollectionsCreatePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MainCreateCollectionBody body = null;
            //var response = instance.CollectionsCreatePost(body);
            //Assert.IsInstanceOf(typeof(MainCollection), response, "response is MainCollection");
        }
        
        /// <summary>
        /// Test CollectionsFsAddPost
        /// </summary>
        [Test]
        public void CollectionsFsAddPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string col = null;
            //string collection = null;
            //string content = null;
            //string path = null;
            //var response = instance.CollectionsFsAddPost(col, collection, content, path);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test CollectionsFsListGet
        /// </summary>
        [Test]
        public void CollectionsFsListGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string col = null;
            //string dir = null;
            //var response = instance.CollectionsFsListGet(col, dir);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test CollectionsListGet
        /// </summary>
        [Test]
        public void CollectionsListGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CollectionsListGet();
            //Assert.IsInstanceOf(typeof(List<MainCollection>), response, "response is List<MainCollection>");
        }
        
    }

}
