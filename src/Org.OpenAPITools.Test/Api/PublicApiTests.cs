/*
 * Estuary API
 *
 * This is the API for the Estuary application.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing PublicApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PublicApiTests
    {
        private PublicApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PublicApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PublicApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' PublicApi
            //Assert.IsInstanceOf(typeof(PublicApi), instance);
        }

        
        /// <summary>
        /// Test ContentByCidCidGet
        /// </summary>
        [Test]
        public void ContentByCidCidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string cid = null;
            //var response = instance.ContentByCidCidGet(cid);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test PublicByCidCidGet
        /// </summary>
        [Test]
        public void PublicByCidCidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string cid = null;
            //var response = instance.PublicByCidCidGet(cid);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test PublicInfoGet
        /// </summary>
        [Test]
        public void PublicInfoGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.PublicInfoGet();
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test PublicMetricsDealsOnChainGet
        /// </summary>
        [Test]
        public void PublicMetricsDealsOnChainGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.PublicMetricsDealsOnChainGet();
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test PublicMinersDealsMinerGet
        /// </summary>
        [Test]
        public void PublicMinersDealsMinerGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string miner = null;
            //var response = instance.PublicMinersDealsMinerGet(miner);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test PublicMinersFailuresMinerGet
        /// </summary>
        [Test]
        public void PublicMinersFailuresMinerGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string miner = null;
            //var response = instance.PublicMinersFailuresMinerGet(miner);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test PublicMinersGet
        /// </summary>
        [Test]
        public void PublicMinersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.PublicMinersGet();
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test PublicMinersStatsMinerGet
        /// </summary>
        [Test]
        public void PublicMinersStatsMinerGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string miner = null;
            //var response = instance.PublicMinersStatsMinerGet(miner);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test PublicMinersStorageQueryMinerGet
        /// </summary>
        [Test]
        public void PublicMinersStorageQueryMinerGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string miner = null;
            //var response = instance.PublicMinersStorageQueryMinerGet(miner);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test PublicNetAddrsGet
        /// </summary>
        [Test]
        public void PublicNetAddrsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.PublicNetAddrsGet();
            //Assert.IsInstanceOf(typeof(List<string>), response, "response is List<string>");
        }
        
        /// <summary>
        /// Test PublicNetPeersGet
        /// </summary>
        [Test]
        public void PublicNetPeersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.PublicNetPeersGet();
            //Assert.IsInstanceOf(typeof(List<string>), response, "response is List<string>");
        }
        
        /// <summary>
        /// Test PublicStatsGet
        /// </summary>
        [Test]
        public void PublicStatsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.PublicStatsGet();
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
    }

}
