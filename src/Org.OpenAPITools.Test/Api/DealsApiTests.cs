/*
 * Estuary API
 *
 * This is the API for the Estuary application.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing DealsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DealsApiTests
    {
        private DealsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DealsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DealsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' DealsApi
            //Assert.IsInstanceOf(typeof(DealsApi), instance);
        }

        
        /// <summary>
        /// Test DealsEstimatePost
        /// </summary>
        [Test]
        public void DealsEstimatePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MainEstimateDealBody body = null;
            //var response = instance.DealsEstimatePost(body);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test DealsFailuresGet
        /// </summary>
        [Test]
        public void DealsFailuresGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.DealsFailuresGet();
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test DealsInfoDealidGet
        /// </summary>
        [Test]
        public void DealsInfoDealidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int dealid = null;
            //var response = instance.DealsInfoDealidGet(dealid);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test DealsMakeMinerPost
        /// </summary>
        [Test]
        public void DealsMakeMinerPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string miner = null;
            //string dealRequest = null;
            //var response = instance.DealsMakeMinerPost(miner, dealRequest);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test DealsProposalPropcidGet
        /// </summary>
        [Test]
        public void DealsProposalPropcidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string propcid = null;
            //var response = instance.DealsProposalPropcidGet(propcid);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test DealsQueryMinerGet
        /// </summary>
        [Test]
        public void DealsQueryMinerGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string miner = null;
            //var response = instance.DealsQueryMinerGet(miner);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test DealsStatusByProposalPropcidGet
        /// </summary>
        [Test]
        public void DealsStatusByProposalPropcidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string propcid = null;
            //var response = instance.DealsStatusByProposalPropcidGet(propcid);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test DealsStatusDealGet
        /// </summary>
        [Test]
        public void DealsStatusDealGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int deal = null;
            //var response = instance.DealsStatusDealGet(deal);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test DealsStatusMinerPropcidGet
        /// </summary>
        [Test]
        public void DealsStatusMinerPropcidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string miner = null;
            //string propcid = null;
            //var response = instance.DealsStatusMinerPropcidGet(miner, propcid);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test DealsTransferInProgressGet
        /// </summary>
        [Test]
        public void DealsTransferInProgressGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.DealsTransferInProgressGet();
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test DealsTransferStatusPost
        /// </summary>
        [Test]
        public void DealsTransferStatusPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.DealsTransferStatusPost();
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
    }

}
